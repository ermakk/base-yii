<?php

namespace ermakk\changelog\models;

use common\models\User;
use phpDocumentor\Reflection\Types\This;
use Yii;
use yii\behaviors\TimestampBehavior;
use yii\db\Expression;
use yii\helpers\Html;

/**
 * This is the model class for table "{{%ermakk_history_change}}".
 *
 * @property int $id
 * @property int $user_id
 * @property int $row_id
 * @property string $model
 *
 * @property User $user
 */
class ActiveRecord extends \yii\db\ActiveRecord
{
    public function afterFind()
    {
        parent::afterFind(); // TODO: Change the autogenerated stub
    }

    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
        foreach (Yii::$app->getModule('changelog')->propertyExclude as $el){

            unset($changedAttributes[$el]);
        }

        if ($changedAttributes != []) {
            $log = new Changelog();
            $log->row_id = $this->id;
            $log->model = $this::className();
            $log->user_id = Yii::$app->user->getId();
            $log->action = $insert ? 'insert' : 'update';
            $log->fields = json_encode($changedAttributes, JSON_UNESCAPED_UNICODE);
//        var_dump($log->validate()); die;
            if ($log->save()) {
//            Yii::$app->session->setFlash('success', 'afterFind success');
            } else {
                Yii::$app->session->setFlash('error', 'Проблемы с логированием событий. Код ошибки #57c4e9 ' . serialize($log->errors));
            }
        }
    }

    public function beforeDelete()
    {
        $log = new Changelog();
        $log->row_id = $this->id;
        $log->model = $this::className();
        $log->user_id = Yii::$app->user->getId();
        $log->action = 'delete';
        $log->comment = 'id: '.$this->id. ' "'.$this->title.'"';
        $log->save();
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

}
